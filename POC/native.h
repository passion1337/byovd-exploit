#pragma once 

#include <Windows.h>
#include <winternl.h>

#pragma comment(lib, "ntdll")
#define IsValidHandle(h) ((h) && ((ULONG_PTR)h != -1))

EXTERN_C_START
NTSTATUS NtLoadDriver(PUNICODE_STRING DriverServiceName);
NTSTATUS NtUnloadDriver(PUNICODE_STRING DriverServiceName);
NTSTATUS RtlGetLastNtStatus();
EXTERN_C_END


#pragma pack(push, 1)
//0x14 bytes (sizeof)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR
{
	UCHAR Type;                                                             //0x0
	UCHAR ShareDisposition;                                                 //0x1
	USHORT Flags;                                                           //0x2
	struct
	{
		ULONG_PTR Start;												//0x4
		ULONG Length;                                                   //0xc

		__forceinline bool OutOfRange(ULONG_PTR address)
		{
			return (Start + Length) > address;
		}
	} Memory;                                                           //0x4
	ULONG pad;
};

//0x1c bytes (sizeof)
struct _CM_PARTIAL_RESOURCE_LIST
{
	USHORT Version;                                                         //0x0
	USHORT Revision;                                                        //0x2
	ULONG Count;                                                            //0x4
	struct _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];           //0x8
};

//0x24 bytes (sizeof)
struct _CM_FULL_RESOURCE_DESCRIPTOR
{
	ULONG InterfaceType;                                     //0x0
	ULONG BusNumber;                                                        //0x4
	struct _CM_PARTIAL_RESOURCE_LIST PartialResourceList;                   //0x8
};

//0x28 bytes (sizeof)
struct _CM_RESOURCE_LIST
{
	ULONG Count;                                                            //0x0
	struct _CM_FULL_RESOURCE_DESCRIPTOR List[1];                            //0x4
};

#pragma pack(pop)


typedef struct _SYSTEM_MODULE_ENTRY {
	HANDLE Section;
	PVOID MappedBase;
	PVOID ImageBase;
	ULONG ImageSize;
	ULONG Flags;
	USHORT LoadOrderIndex;
	USHORT InitOrderIndex;
	USHORT LoadCount;
	USHORT OffsetToFileName;
	UCHAR FullPathName[256];
} SYSTEM_MODULE_ENTRY, * PSYSTEM_MODULE_ENTRY;

typedef struct _SYSTEM_MODULE_INFORMATION {
	ULONG Count;
	SYSTEM_MODULE_ENTRY Module[1];
} SYSTEM_MODULE_INFORMATION, * PSYSTEM_MODULE_INFORMATION;